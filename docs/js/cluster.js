import{RADIUS_HEX,CLUSTER_MIN_SIZE}from"./info.js";class Cluster{static COUNT=0;constructor(e){this.id=Cluster.COUNT++,this.playerId=void 0,this.dices=Math.floor(6*Math.random())+1,this.nodes=[],this.addNodeAndItsNeighbours(e),this.expand(),this.centerPos=this.centerPos(),this.corners=this.cornersPos()}addNodeAndItsNeighbours(e){(e.cluster=this).nodes.push(e),e.getAdjacentNodesFromNode().filter(e=>void 0===e.cluster).forEach(e=>{(e.cluster=this).nodes.push(e)})}expand(){for(;this.nodes.length<CLUSTER_MIN_SIZE;){var e=this.getAdjacentNodesFromCluster().filter(e=>void 0===e.cluster);if(0===e.length)break;e=e[Math.floor(Math.random()*(e.length-1))];this.addNodeAndItsNeighbours(e)}}centerPos(){let e=this.nodes.find(e=>{e=e.getAdjacentNodesFromNode();return 6===e.length&&e.every(e=>e.cluster?.id===this.id)});return(e=void 0===e?this.nodes[0]:e).hex.center}cornersPos(){var e,t=[];for(e of this.nodes)for(var[r,s]of["upRight","upLeft","left","downLeft","downRight","right"].entries())void 0!==e[s]&&e[s]?.cluster?.id===this.id||(r=5==(s=5-r)?0:1+s,t.push({start:{x:e.hex.corners[r].x,y:e.hex.corners[r].y},end:{x:e.hex.corners[s].x,y:e.hex.corners[s].y}}));t.sort((e,t)=>e.start.x-t.start.x);let o=t.shift();for(var d=[o];0!==t.length;)for(let e=0;e<t.length;e++){var n=t[e];if(Math.sqrt((o.end.x-n.start.x)**2+(o.end.y-n.start.y)**2)<2){o=n,t.splice(e,1),d.push(o);break}}return d.map(e=>e.start)}getAdjacentNodesFromCluster(){return Array.from(new Set(this.nodes.flatMap(e=>e.getAdjacentNodesFromNode()).filter(e=>!this.nodes.includes(e))))}getAdjacentClustersFromCluster(){return[...new Set(this.getAdjacentNodesFromCluster().filter(e=>void 0!==e.cluster).map(e=>e.cluster))]}containsPoint(t){return this.nodes.some(e=>Math.pow(t.x-e.hex.center.x,2)+Math.pow(t.y-e.hex.center.y,2)<Math.pow(RADIUS_HEX,2))}getRegionSize(){let t=[this.id],e=this.getAdjacentClustersFromCluster().filter(e=>!t.includes(e.id)&&e.playerId===this.playerId);for(;0<e.length;)t=t.concat(e.map(e=>e.id)),e=[...new Set(e.flatMap(e=>e.getAdjacentClustersFromCluster().filter(e=>!t.includes(e.id)&&e.playerId===this.playerId)))];return t.length}}export{Cluster};